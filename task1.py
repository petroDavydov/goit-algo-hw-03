import os
import shutil
import argparse

def copy_and_sort_files(source_directory, destination_directory):
    """
    –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∫–æ–ø—ñ—é—î —Ñ–∞–π–ª–∏, –ø–µ—Ä–µ–º—ñ—â—É—î —ó—Ö –¥–æ –Ω–æ–≤–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó —Ç–∞ —Å–æ—Ä—Ç—É—î –∑–∞ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è–º.
    """
    if not os.path.exists(destination_directory):
        os.makedirs(destination_directory)  # –Ø–∫—â–æ –Ω–µ–º–∞—î –¥–µ—Ä–∏–∫—Ç–æ—Ä—ñ—ó -> —Å—Ç–≤–æ—Ä—é—î–º–æ

    for item in os.listdir(source_directory):
        item_path = os.path.join(source_directory, item)

        if os.path.isdir(item_path):
            copy_and_sort_files(item_path, destination_directory)  # –û–±—Ä–æ–±–∫–∞ –ø—ñ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
        else:
            try:
                file_extension = os.path.splitext(item)[1].lower()  # –†–æ–∑—à–∏—Ä–µ–Ω–Ω—è —Ñ–∞–π–ª—É
                extension_directory = os.path.join(destination_directory, file_extension[1:] or "unknown")  # –ü–∞–ø–∫–∞ –¥–ª—è —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è use hint

                if not os.path.exists(extension_directory):
                    os.makedirs(extension_directory)  # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫—É –¥–ª—è —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è

                shutil.copy2(item_path, extension_directory)  # –ö–æ–ø—ñ—é—î–º–æ —Ñ–∞–π–ª —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –ø–∞–ø–∫—É
                print(f"‚úÖ –ö–æ–ø—ñ—é—î–º–æ '{item}' –¥–æ '{extension_directory}'")

            except Exception as error:
                print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è '{item}': {error}")

if __name__ == "__main__":
    argument_parser = argparse.ArgumentParser(description="–†–µ–∫—É—Ä—Å–∏–≤–Ω–µ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è/—Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤.")
    argument_parser.add_argument("source_directory", help="–®–ª—è—Ö –¥–æ –≤–∏—Ö—ñ–¥–Ω–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó")
    argument_parser.add_argument("destination_directory", nargs="?", default="dist", help="–®–ª—è—Ö –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –≤ —è–∫—É –∫–æ–ø—ñ—é—î–º–æ (–¥–µ—Ñ–æ–ª—Ç–Ω–æ 'dist')")

    arguments = argument_parser.parse_args()
    destination_directory = arguments.destination_directory if arguments.destination_directory else "dist"  # ‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è "dist" —è–∫ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º

    if os.path.exists(arguments.source_directory):
        copy_and_sort_files(arguments.source_directory, destination_directory)
        print(f"üéâ –§–∞–π–ª–∏ —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω—ñ —Ç–∞ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω—ñ –≤ '{destination_directory}'!")
    else:
        print(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è '{arguments.source_directory}' –Ω–µ —ñ—Å–Ω—É—î!")

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–∏:
# python task1.py <source_directory> <destination_directory>
# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–∏ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤:
# python task1.py <source_directory> -> –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è "dist" —è–∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è